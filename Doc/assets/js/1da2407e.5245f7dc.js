"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[2381],{84923:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=s(74848),i=s(28453),a=s(27064),r=s(89236);const o={id:"ue-metrics-play-sessions",title:"Metrics Play Sessions",slug:"/unreal/getting-started/metrics-play-sessions",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/metrics-play-sessions.mdx"},l=void 0,c={id:"getting-started/ue-metrics-play-sessions",title:"Metrics Play Sessions",description:"The mod.io Unreal Engine Plugin supports all of the mod.io metrics features, allowing you to start a metrics play sesion, keeping that session alive via a heartbeat (automatically called, or manually handled) and then ending that session. Metric sessions allow you to track which mods your players interact with most frequently. Visit https://docs.mod.io/metrics/ for an overview of the mod.io metrics system.",source:"@site/public/en-us/getting-started/metrics-play-sessions.mdx",sourceDirName:"getting-started",slug:"/unreal/getting-started/metrics-play-sessions",permalink:"/unreal/getting-started/metrics-play-sessions",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/metrics-play-sessions.mdx",tags:[],version:"current",frontMatter:{id:"ue-metrics-play-sessions",title:"Metrics Play Sessions",slug:"/unreal/getting-started/metrics-play-sessions",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/metrics-play-sessions.mdx"},sidebar:"sidebar",previous:{title:"Muting and Unmuting a User",permalink:"/unreal/getting-started/mute-user"},next:{title:"Marketplace",permalink:"/unreal/marketplace/"}},d={},u=[{value:"Initialization",id:"initialization",level:4},{value:"Starting a Metrics Session",id:"starting-a-metrics-session",level:4},{value:"Metrics heartbeat",id:"metrics-heartbeat",level:4},{value:"Ending a Metrics Session",id:"ending-a-metrics-session",level:4}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h4:"h4",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The mod.io Unreal Engine Plugin supports all of the mod.io metrics features, allowing you to start a metrics play sesion, keeping that session alive via a heartbeat (automatically called, or manually handled) and then ending that session. Metric sessions allow you to track which mods your players interact with most frequently. Visit ",(0,n.jsx)(t.a,{href:"https://docs.mod.io/metrics/",children:"https://docs.mod.io/metrics/"})," for an overview of the mod.io metrics system."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Running metrics play sessions is a premium feature. If you are interested in mod.io premium features, please contact ",(0,n.jsx)(t.a,{href:"mailto:developers@mod.io",children:"developers@mod.io"}),"."]})}),"\n",(0,n.jsxs)(t.p,{children:["The Metrics session functionality is all accessible through the ",(0,n.jsx)(t.code,{children:"ModioSubsystem"})," class."]}),"\n",(0,n.jsx)(t.p,{children:"Metrics based on the platform and portal, are transparently taken care of with no additional consideration needed when using the SDK."}),"\n",(0,n.jsx)(t.h4,{id:"initialization",children:"Initialization"}),"\n",(0,n.jsxs)(t.p,{children:["The mod.io metrics features are enabled as part of generating a Metrics Secret Key your API settings in your game dashboard, e.g. ",(0,n.jsx)(t.a,{href:"https://mod.io/g/game-name/admin/api-key",children:"https://mod.io/g/game-name/admin/api-key"}),". Once this key has been generated, you need to pass it in as an ExtendedInitializationParameters entry in your InitializeOptions when Initializing the mod.io SDK, e.g.:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:'FModioInitializeOptions initializeOptions;\ninitializeOptions.ExtendedInitializationParameters.Add("MetricsSecretKey", "00000000-1111-2222-3333-444444444444");\n'})}),"\n",(0,n.jsx)(t.p,{children:"Failing to set up the Metrics Secret Key will result in a `SessionNotInitialized`` error being returned when using the metrics functionality."}),"\n",(0,n.jsx)(t.h4,{id:"starting-a-metrics-session",children:"Starting a Metrics Session"}),"\n",(0,n.jsxs)(t.p,{children:["You can call ",(0,n.jsx)(t.a,{href:"/unreal/refdocs/#metricssessionstartasync",children:"MetricsSessionStartAsync"})," to start a new session tracking the usage of mods in the context of your game. You'll notice that ",(0,n.jsx)(t.code,{children:"MetricsSessionStartAsync"})," takes a ",(0,n.jsx)(t.a,{href:"/unreal/refdocs/#modiometricssessionparams",children:"MetricsSessionParams"})," struct as its parameter. This contains an optional Session Id, as well as a required vector of mods to track."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"If a Session Id is not provided, a random one will be created for you."})}),"\n",(0,n.jsxs)(a.A,{"group-id":"languages",children:[(0,n.jsxs)(r.A,{value:"blueprint",label:"Blueprint",children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"metrics_session_start_1",src:s(82326).A+"",width:"769",height:"513"})}),(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Use the ",(0,n.jsx)(t.code,{children:"SetSessionId"})," node if you want to associate your own Id with this session."]})}),(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"metrics_session_start_2",src:s(73005).A+"",width:"1025",height:"513"})})]}),(0,n.jsx)(r.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"FModioMetricsSessionParams Params = FModioMetricsSessionParams(ModIds);\n\nvoid UModioManager::MetricsSessionStart(const FModioMetricsSessionParams& Params)\n{\n\tGEngine->GetEngineSubsystem<UModioSubsystem>()->MetricsSessionStartAsync(\n\t\tParams, FOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManager::MetricsSessionStartCallback));\n}\n"})})})]}),"\n",(0,n.jsxs)(t.p,{children:["The Metrics Session Params accepts an optional Session Id in the form of a ",(0,n.jsx)(t.code,{children:"FModioGuid"})," which you may want to use to associate the new session with any supplementary telemetry you are gathering in your game."]}),"\n",(0,n.jsx)(t.h4,{id:"metrics-heartbeat",children:"Metrics heartbeat"}),"\n",(0,n.jsx)(t.p,{children:"To ensure that the session is kept alive, a heartbeat is required to be submitted at most every 5 minutes. We recommend doing this a bit earlier than the threshold to ensure you do not miss the window."}),"\n",(0,n.jsxs)(t.p,{children:["There are two methods provided to control the behaviour of the heart beat, ",(0,n.jsx)(t.a,{href:"/unreal/refdocs/#metricssessionsendheartbeatonceasync",children:"MetricsSessionSendHeartbeatOnceAsync"})," which you can call at your desired precision, as well as a single call and forget ",(0,n.jsx)(t.a,{href:"/unreal/refdocs/#metricssessionsendheartbeatatintervalasync",children:"MetricsSessionSendHeartbeatAtIntervalAsync"})," with a desired interval."]}),"\n",(0,n.jsxs)(t.p,{children:["Calling ",(0,n.jsx)(t.code,{children:"MetricsSessionSendHeartbeatOnceAsync"})," will submit a single heartbeat, and return an error code if something went wrong. If no error has occured, the heartbeat has been successfully sent."]}),"\n",(0,n.jsxs)(a.A,{"group-id":"languages",children:[(0,n.jsx)(r.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"metrics_session_heartbeat",src:s(64202).A+"",width:"641",height:"385"})})}),(0,n.jsx)(r.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"void UModioManager::MetricsSessionHeartbeat()\n{\n\tGEngine->GetEngineSubsystem<UModioSubsystem>()->MetricsSessionSendHeartbeatOnceAsync(\n\t\tFOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManager::MetricsSessionHeartbeatCallback));\n}\n"})})})]}),"\n",(0,n.jsxs)(t.p,{children:["Calling ",(0,n.jsx)(t.code,{children:"MetricsSessionSendHeartbeatAtIntervalAsync"})," requires a parameter with the desired interval frequency in seconds. An error code will be returned if something went wrong, otherwise you will receive a false-y error if the interval loop has been shut down successfully (such as ending a session)."]}),"\n",(0,n.jsxs)(a.A,{"group-id":"languages",children:[(0,n.jsx)(r.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"metrics_session_heartbeat_interval",src:s(25772).A+"",width:"641",height:"385"})})}),(0,n.jsx)(r.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"const FModioUnsigned64 IntervalSeconds(150);\n\nvoid UModioManager::MetricsSessionHeartbeat(const FModioUnsigned64& IntervalSeconds)\n{\n\tGEngine->GetEngineSubsystem<UModioSubsystem>()->MetricsSessionSendHeartbeatAtIntervalAsync(\n\t\tIntervalSeconds, \n\t\tFOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManager::MetricsSessionHeartbeatCallback));\n}\n"})})})]}),"\n",(0,n.jsx)(t.h4,{id:"ending-a-metrics-session",children:"Ending a Metrics Session"}),"\n",(0,n.jsxs)(t.p,{children:["To complete a session, for example when finishing a match, or quitting out of your game, you can call ",(0,n.jsx)(t.a,{href:"/unreal/refdocs/#metricssessionendasync",children:"MetricsSessionEndAsync"}),".\nAs with the other calls, you will receive an error if anything has gone wrong, otherwise the operation successfully completed."]}),"\n",(0,n.jsxs)(a.A,{"group-id":"languages",children:[(0,n.jsx)(r.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"metrics_session_end",src:s(93089).A+"",width:"513",height:"385"})})}),(0,n.jsx)(r.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"void UModioManager::MetricsSessionHeartbeat()\n{\n\tGEngine->GetEngineSubsystem<UModioSubsystem>()->MetricsSessionEndAsync(\n\t\tFOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManager::MetricsSessionHeartbeatCallback));\n}\n"})})})]})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},19365:(e,t,s)=>{s.d(t,{A:()=>r});s(96540);var n=s(18215);const i={tabItem:"tabItem_Ymn6"};var a=s(74848);function r(e){let{children:t,hidden:s,className:r}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(i.tabItem,r),hidden:s,children:t})}},11470:(e,t,s)=>{s.d(t,{A:()=>w});var n=s(96540),i=s(18215),a=s(23104),r=s(56347),o=s(205),l=s(57485),c=s(31682),d=s(70679);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:s}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:s,attributes:n,default:i}}=e;return{value:t,label:s,attributes:n,default:i}}))}(s);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,s])}function m(e){let{value:t,tabValues:s}=e;return s.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:s}=e;const i=(0,r.W6)(),a=function(e){let{queryString:t=!1,groupId:s}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:t,groupId:s});return[(0,l.aZ)(a),(0,n.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(i.location.search);t.set(a,e),i.replace({...i.location,search:t.toString()})}),[a,i])]}function g(e){const{defaultValue:t,queryString:s=!1,groupId:i}=e,a=h(e),[r,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=s.find((e=>e.default))??s[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:a}))),[c,u]=p({queryString:s,groupId:i}),[g,b]=function(e){let{groupId:t}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,a]=(0,d.Dv)(s);return[i,(0,n.useCallback)((e=>{s&&a.set(e)}),[s,a])]}({groupId:i}),f=(()=>{const e=c??g;return m({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{f&&l(f)}),[f]);return{selectedValue:r,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,a]),tabValues:a}}var b=s(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=s(74848);function v(e){let{className:t,block:s,selectedValue:n,selectValue:r,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),d=e=>{const t=e.currentTarget,s=l.indexOf(t),i=o[s].value;i!==n&&(c(t),r(i))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;t=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;t=l[s]??l[l.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":s},t),children:o.map((e=>{let{value:t,label:s,attributes:a}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>l.push(e),onKeyDown:u,onClick:d,...a,className:(0,i.A)("tabs__item",f.tabItem,a?.className,{"tabs__item--active":n===t}),children:s??t},t)}))})}function x(e){let{lazy:t,children:s,selectedValue:i}=e;const a=(Array.isArray(s)?s:[s]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===i));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function j(e){const t=g(e);return(0,y.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,y.jsx)(v,{...t,...e}),(0,y.jsx)(x,{...t,...e})]})}function w(e){const t=(0,b.A)();return(0,y.jsx)(j,{...e,children:u(e.children)},String(t))}},89236:(e,t,s)=>{s.d(t,{A:()=>a});var n=s(19365),i=(s(96540),s(74848));function a(e){return(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(n.A,{className:"tw-rounded-md",...e})})}},27064:(e,t,s)=>{s.d(t,{A:()=>a});var n=s(11470),i=(s(96540),s(74848));function a(e){return(0,i.jsx)("div",{className:"tw-border tw-border-solid tw-border-skyblue tw-rounded-md tw-bg-darkslategray tw-p-4 tw-mb-4",children:(0,i.jsx)(n.A,{...e})})}},93089:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/metrics_session_end-942fd0dad67f632b70e0d47a6b69ceda.png"},64202:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/metrics_session_heartbeat-6c6cae38cd1ecca90c1a7737010bdd34.png"},25772:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/metrics_session_heartbeat_interval-efbee004400f2d4006fd7d541abd445b.png"},82326:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/metrics_session_start_1-fd94f8b4fbb49ad0ba7fcf28ecf5e8f0.png"},73005:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/metrics_session_start_2-43157714ec2d0e21034cfd939a6f9879.png"},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(96540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);