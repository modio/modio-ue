"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[4481],{21369:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(74848),s=t(28453),u=t(27064),a=t(89236);const o={id:"ue-mute-user",title:"Muting and Unmuting a User",slug:"/unreal/core-plugin/mute-user",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/mute-user.mdx"},i=void 0,l={id:"core-plugin/ue-mute-user",title:"Muting and Unmuting a User",description:"Users have the ability to disable updates from other user\u2019s mods. This will prevent mod.io from returning mods authored by the muted user. There are three actions available to take: mute a user, unmute a user, and list muted users",source:"@site/public/en-us/core-plugin/mute-user.mdx",sourceDirName:"core-plugin",slug:"/unreal/core-plugin/mute-user",permalink:"/unreal/core-plugin/mute-user",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/mute-user.mdx",tags:[],version:"current",frontMatter:{id:"ue-mute-user",title:"Muting and Unmuting a User",slug:"/unreal/core-plugin/mute-user",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/mute-user.mdx"},sidebar:"sidebar",previous:{title:"Temporary Mod Sets",permalink:"/unreal/core-plugin/temporary-mods"},next:{title:"Metrics Play Sessions",permalink:"/unreal/core-plugin/metrics-play-sessions"}},d={},c=[{value:"Mute a user",id:"mute-a-user",level:2},{value:"Unmute a user",id:"unmute-a-user",level:2},{value:"List muted users",id:"list-muted-users",level:2}];function m(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:"Users have the ability to disable updates from other user\u2019s mods. This will prevent mod.io from returning mods authored by the muted user. There are three actions available to take: mute a user, unmute a user, and list muted users"}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"To perform any of these actions, the muting user must be authenticated."})}),"\n",(0,n.jsx)(r.h2,{id:"mute-a-user",children:"Mute a user"}),"\n",(0,n.jsxs)(r.p,{children:["To mute a user, call ",(0,n.jsx)(r.a,{href:"/unreal/refdocs/#muteuserasync",children:(0,n.jsx)(r.code,{children:"MuteUserAsync"})})," with the corresponding ",(0,n.jsx)(r.code,{children:"ModioUserID"})," and a callback."]}),"\n",(0,n.jsxs)(u.A,{"group-id":"languages",children:[(0,n.jsx)(a.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"mute_user",src:t(16307).A+"",width:"631",height:"514"})})}),(0,n.jsx)(a.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"\r\nvoid UModioManagerSubsystem::MuteAUser(FModioUserID UserID)\r\n{\r\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\r\n   {\r\n   \tSubsystem->MuteUserAsync(UserID, FOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnMuteUserComplete));\r\n   }\r\n}\r\n\r\nvoid UModioManagerSubsystem::OnMuteUserComplete(FModioErrorCode ErrorCode)\r\n{\r\n   if (!ErrorCode)\r\n   {\r\n   \t// User successfully muted \r\n   }\r\n}\r\n\n"})})})]}),"\n",(0,n.jsx)(r.h2,{id:"unmute-a-user",children:"Unmute a user"}),"\n",(0,n.jsxs)(r.p,{children:["To perform the inverse operation call ",(0,n.jsx)(r.a,{href:"/unreal/refdocs/#unmuteuserasync",children:(0,n.jsx)(r.code,{children:"UnmuteUserAsync"})})," with the corresponding ",(0,n.jsx)(r.code,{children:"ModioUserID"})," and a callback."]}),"\n",(0,n.jsxs)(u.A,{"group-id":"languages",children:[(0,n.jsx)(a.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"unmute_user",src:t(47500).A+"",width:"649",height:"532"})})}),(0,n.jsx)(a.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"\r\nvoid UModioManagerSubsystem::UnmuteAUser(FModioUserID UserID)\r\n{\r\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\r\n   {\r\n   \tSubsystem->UnmuteUserAsync(UserID, FOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnUnmuteUserComplete));\r\n   }\r\n}\r\n\r\nvoid UModioManagerSubsystem::OnUnmuteUserComplete(FModioErrorCode ErrorCode)\r\n{\r\n   if (!ErrorCode)\r\n   {\r\n   \t// User successfully unmuted \r\n   }\r\n}\n"})})})]}),"\n",(0,n.jsx)(r.h2,{id:"list-muted-users",children:"List muted users"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/unreal/refdocs/#getmutedusersasync",children:(0,n.jsx)(r.code,{children:"GetMutedUsersAsync"})})," returns a list of users previously muted by an authenticated user."]}),"\n",(0,n.jsxs)(u.A,{"group-id":"languages",children:[(0,n.jsx)(a.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"get_muted_users",src:t(96465).A+"",width:"863",height:"370"})})}),(0,n.jsx)(a.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"\r\nvoid UModioManagerSubsystem::ListMutedUsers()\r\n{\r\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\r\n   {\r\n   \tSubsystem->GetMutedUsersAsync(FOnMuteUsersDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnListMutedUsersComplete));\r\n   }\r\n}\r\n\r\nvoid UModioManagerSubsystem::OnListMutedUsersComplete(FModioErrorCode ErrorCode, FModioOptionalUserList MutedUsers)\r\n{\r\n   if (!ErrorCode)\r\n   {\r\n   \t// List of muted users successfully retrieved \r\n   }\r\n}\r\n\n"})})})]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},19365:(e,r,t)=>{t.d(r,{A:()=>a});t(96540);var n=t(18215);const s={tabItem:"tabItem_Ymn6"};var u=t(74848);function a(e){let{children:r,hidden:t,className:a}=e;return(0,u.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,a),hidden:t,children:r})}},11470:(e,r,t)=>{t.d(r,{A:()=>j});var n=t(96540),s=t(18215),u=t(23104),a=t(56347),o=t(205),i=t(57485),l=t(31682),d=t(70679);function c(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:r,children:t}=e;return(0,n.useMemo)((()=>{const e=r??function(e){return c(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:s}}=e;return{value:r,label:t,attributes:n,default:s}}))}(t);return function(e){const r=(0,l.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function h(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function p(e){let{queryString:r=!1,groupId:t}=e;const s=(0,a.W6)(),u=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,i.aZ)(u),(0,n.useCallback)((e=>{if(!u)return;const r=new URLSearchParams(s.location.search);r.set(u,e),s.replace({...s.location,search:r.toString()})}),[u,s])]}function b(e){const{defaultValue:r,queryString:t=!1,groupId:s}=e,u=m(e),[a,i]=(0,n.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!h({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:u}))),[l,c]=p({queryString:t,groupId:s}),[b,g]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[s,u]=(0,d.Dv)(t);return[s,(0,n.useCallback)((e=>{t&&u.set(e)}),[t,u])]}({groupId:s}),f=(()=>{const e=l??b;return h({value:e,tabValues:u})?e:null})();(0,o.A)((()=>{f&&i(f)}),[f]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:u}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),g(e)}),[c,g,u]),tabValues:u}}var g=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function y(e){let{className:r,block:t,selectedValue:n,selectValue:a,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:l}=(0,u.a_)(),d=e=>{const r=e.currentTarget,t=i.indexOf(r),s=o[t].value;s!==n&&(l(r),a(s))},c=e=>{let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;r=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;r=i[t]??i[i.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},r),children:o.map((e=>{let{value:r,label:t,attributes:u}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:e=>i.push(e),onKeyDown:c,onClick:d,...u,className:(0,s.A)("tabs__item",f.tabItem,u?.className,{"tabs__item--active":n===r}),children:t??r},r)}))})}function x(e){let{lazy:r,children:t,selectedValue:s}=e;const u=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=u.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:u.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==s})))})}function U(e){const r=b(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,v.jsx)(y,{...r,...e}),(0,v.jsx)(x,{...r,...e})]})}function j(e){const r=(0,g.A)();return(0,v.jsx)(U,{...e,children:c(e.children)},String(r))}},89236:(e,r,t)=>{t.d(r,{A:()=>u});var n=t(19365),s=(t(96540),t(74848));function u(e){return(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.A,{className:"tw-rounded-md",...e})})}},27064:(e,r,t)=>{t.d(r,{A:()=>u});var n=t(11470),s=(t(96540),t(74848));function u(e){return(0,s.jsx)("div",{className:"tw-border tw-border-solid tw-border-skyblue tw-rounded-md tw-bg-darkslategray tw-p-4 tw-mb-4",children:(0,s.jsx)(n.A,{...e})})}},96465:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/get_muted_users-e919c33e0df1d6b5c51b062a1d7dba6e.png"},16307:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/mute_user-fa30ac24dd0d89f88d8b3d934106b4c4.png"},47500:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/unmute_user-2738b62f56ce6eaf7167e1c69a73c60b.png"},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>o});var n=t(96540);const s={},u=n.createContext(s);function a(e){const r=n.useContext(u);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(u.Provider,{value:r},e.children)}}}]);