"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[1991],{6046:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(74848),s=r(28453),u=r(27064),a=r(89236);const o={id:"ue-mute-user",title:"Muting and Unmuting a User",slug:"/unreal/getting-started/mute-user",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/mute-user.mdx"},i=void 0,l={id:"getting-started/ue-mute-user",title:"Muting and Unmuting a User",description:"Users have the ability to disable updates from other user\u2019s mods. This will prevent mod.io from returning mods authored by the muted user. There are three actions available to take: mute a user, unmute a user, and list muted users",source:"@site/public/en-us/getting-started/mute-user.mdx",sourceDirName:"getting-started",slug:"/unreal/getting-started/mute-user",permalink:"/unreal/getting-started/mute-user",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/mute-user.mdx",tags:[],version:"current",frontMatter:{id:"ue-mute-user",title:"Muting and Unmuting a User",slug:"/unreal/getting-started/mute-user",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/mute-user.mdx"},sidebar:"sidebar",previous:{title:"Temporary Mod Sets",permalink:"/unreal/getting-started/temporary-mods"},next:{title:"Metrics Play Sessions",permalink:"/unreal/getting-started/metrics-play-sessions"}},d={},c=[{value:"Mute a user",id:"mute-a-user",level:2},{value:"Unmute a user",id:"unmute-a-user",level:2},{value:"List muted users",id:"list-muted-users",level:2}];function m(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Users have the ability to disable updates from other user\u2019s mods. This will prevent mod.io from returning mods authored by the muted user. There are three actions available to take: mute a user, unmute a user, and list muted users"}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"To perform any of these actions, the muting user must be authenticated."})}),"\n",(0,n.jsx)(t.h2,{id:"mute-a-user",children:"Mute a user"}),"\n",(0,n.jsxs)(t.p,{children:["To mute a user, call ",(0,n.jsx)(t.a,{href:"/unreal/refdocs/#muteuserasync",children:(0,n.jsx)(t.code,{children:"MuteUserAsync"})})," with the corresponding ",(0,n.jsx)(t.code,{children:"ModioUserID"})," and a callback."]}),"\n",(0,n.jsxs)(u.A,{"group-id":"languages",children:[(0,n.jsx)(a.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"mute_user",src:r(11446).A+"",width:"631",height:"514"})})}),(0,n.jsx)(a.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"\nvoid UModioManagerSubsystem::MuteAUser(FModioUserID UserID)\n{\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\n   {\n   \tSubsystem->MuteUserAsync(UserID, FOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnMuteUserComplete));\n   }\n}\n\nvoid UModioManagerSubsystem::OnMuteUserComplete(FModioErrorCode ErrorCode)\n{\n   if (!ErrorCode)\n   {\n   \t// User successfully muted \n   }\n}\n\n"})})})]}),"\n",(0,n.jsx)(t.h2,{id:"unmute-a-user",children:"Unmute a user"}),"\n",(0,n.jsxs)(t.p,{children:["To perform the inverse operation call ",(0,n.jsx)(t.a,{href:"/unreal/refdocs/#unmuteuserasync",children:(0,n.jsx)(t.code,{children:"UnmuteUserAsync"})})," with the corresponding ",(0,n.jsx)(t.code,{children:"ModioUserID"})," and a callback."]}),"\n",(0,n.jsxs)(u.A,{"group-id":"languages",children:[(0,n.jsx)(a.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"unmute_user",src:r(12557).A+"",width:"649",height:"532"})})}),(0,n.jsx)(a.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"\nvoid UModioManagerSubsystem::UnmuteAUser(FModioUserID UserID)\n{\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\n   {\n   \tSubsystem->UnmuteUserAsync(UserID, FOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnUnmuteUserComplete));\n   }\n}\n\nvoid UModioManagerSubsystem::OnUnmuteUserComplete(FModioErrorCode ErrorCode)\n{\n   if (!ErrorCode)\n   {\n   \t// User successfully unmuted \n   }\n}\n"})})})]}),"\n",(0,n.jsx)(t.h2,{id:"list-muted-users",children:"List muted users"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/unreal/refdocs/#getmutedusersasync",children:(0,n.jsx)(t.code,{children:"GetMutedUsersAsync"})})," returns a list of users previously muted by an authenticated user."]}),"\n",(0,n.jsxs)(u.A,{"group-id":"languages",children:[(0,n.jsx)(a.A,{value:"blueprint",label:"Blueprint",children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"get_muted_users",src:r(29404).A+"",width:"863",height:"370"})})}),(0,n.jsx)(a.A,{value:"c++",label:"C++",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"\nvoid UModioManagerSubsystem::ListMutedUsers()\n{\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\n   {\n   \tSubsystem->GetMutedUsersAsync(FOnMuteUsersDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnListMutedUsersComplete));\n   }\n}\n\nvoid UModioManagerSubsystem::OnListMutedUsersComplete(FModioErrorCode ErrorCode, FModioOptionalUserList MutedUsers)\n{\n   if (!ErrorCode)\n   {\n   \t// List of muted users successfully retrieved \n   }\n}\n\n"})})})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},19365:(e,t,r)=>{r.d(t,{A:()=>a});r(96540);var n=r(18215);const s={tabItem:"tabItem_Ymn6"};var u=r(74848);function a(e){let{children:t,hidden:r,className:a}=e;return(0,u.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,a),hidden:r,children:t})}},11470:(e,t,r)=>{r.d(t,{A:()=>j});var n=r(96540),s=r(18215),u=r(23104),a=r(56347),o=r(205),i=r(57485),l=r(31682),d=r(70679);function c(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return c(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:s}}=e;return{value:t,label:r,attributes:n,default:s}}))}(r);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function h(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:r}=e;const s=(0,a.W6)(),u=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i.aZ)(u),(0,n.useCallback)((e=>{if(!u)return;const t=new URLSearchParams(s.location.search);t.set(u,e),s.replace({...s.location,search:t.toString()})}),[u,s])]}function p(e){const{defaultValue:t,queryString:r=!1,groupId:s}=e,u=m(e),[a,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:u}))),[l,c]=b({queryString:r,groupId:s}),[p,g]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,u]=(0,d.Dv)(r);return[s,(0,n.useCallback)((e=>{r&&u.set(e)}),[r,u])]}({groupId:s}),f=(()=>{const e=l??p;return h({value:e,tabValues:u})?e:null})();(0,o.A)((()=>{f&&i(f)}),[f]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:u}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),g(e)}),[c,g,u]),tabValues:u}}var g=r(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(74848);function y(e){let{className:t,block:r,selectedValue:n,selectValue:a,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:l}=(0,u.a_)(),d=e=>{const t=e.currentTarget,r=i.indexOf(t),s=o[r].value;s!==n&&(l(t),a(s))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;t=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;t=i[r]??i[i.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},t),children:o.map((e=>{let{value:t,label:r,attributes:u}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>i.push(e),onKeyDown:c,onClick:d,...u,className:(0,s.A)("tabs__item",f.tabItem,u?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function x(e){let{lazy:t,children:r,selectedValue:s}=e;const u=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=u.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:u.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function U(e){const t=p(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,v.jsx)(y,{...t,...e}),(0,v.jsx)(x,{...t,...e})]})}function j(e){const t=(0,g.A)();return(0,v.jsx)(U,{...e,children:c(e.children)},String(t))}},89236:(e,t,r)=>{r.d(t,{A:()=>u});var n=r(19365),s=(r(96540),r(74848));function u(e){return(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.A,{className:"tw-rounded-md",...e})})}},27064:(e,t,r)=>{r.d(t,{A:()=>u});var n=r(11470),s=(r(96540),r(74848));function u(e){return(0,s.jsx)("div",{className:"tw-border tw-border-solid tw-border-skyblue tw-rounded-md tw-bg-darkslategray tw-p-4 tw-mb-4",children:(0,s.jsx)(n.A,{...e})})}},29404:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/get_muted_users-e919c33e0df1d6b5c51b062a1d7dba6e.png"},11446:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/mute_user-fa30ac24dd0d89f88d8b3d934106b4c4.png"},12557:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/unmute_user-2738b62f56ce6eaf7167e1c69a73c60b.png"},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var n=r(96540);const s={},u=n.createContext(s);function a(e){const t=n.useContext(u);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(u.Provider,{value:t},e.children)}}}]);