"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[1010],{52275:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=t(74848),o=t(28453);t(27064),t(89236);const r={id:"ue-plugin-structure",title:"Plugin Structure & Concepts",slug:"/unreal/core-plugin/plugin-structure/",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/plugin-structure.mdx"},s=void 0,a={id:"core-plugin/ue-plugin-structure",title:"Plugin Structure & Concepts",description:"ModioSubsystem",source:"@site/public/en-us/core-plugin/plugin-structure.mdx",sourceDirName:"core-plugin",slug:"/unreal/core-plugin/plugin-structure/",permalink:"/unreal/core-plugin/plugin-structure/",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/plugin-structure.mdx",tags:[],version:"current",frontMatter:{id:"ue-plugin-structure",title:"Plugin Structure & Concepts",slug:"/unreal/core-plugin/plugin-structure/",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/plugin-structure.mdx"},sidebar:"sidebar",previous:{title:"Installation & Setup",permalink:"/unreal/core-plugin/installation-and-setup/"},next:{title:"Initialization & Teardown",permalink:"/unreal/core-plugin/initialization"}},l={},d=[{value:"<code>ModioSubsystem</code>",id:"modiosubsystem",level:2},{value:"Value objects",id:"value-objects",level:2},{value:"UTF-8 guarantees",id:"utf-8-guarantees",level:2},{value:"Thread-safety guarantees",id:"thread-safety-guarantees",level:2},{value:"Non-blocking, asynchronous interface",id:"non-blocking-asynchronous-interface",level:2},{value:"Callback conventions",id:"callback-conventions",level:3},{value:"Maintaining the plugin event loop",id:"maintaining-the-plugin-event-loop",level:3},{value:"Error handling",id:"error-handling",level:2},{value:"User sessions",id:"user-sessions",level:2},{value:"Session IDs",id:"session-ids",level:3},{value:"Mod data directory",id:"mod-data-directory",level:2},{value:"Globally for a system account",id:"globally-for-a-system-account",level:3},{value:"Per-game for a system account",id:"per-game-for-a-system-account",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"modiosubsystem",children:(0,i.jsx)(n.code,{children:"ModioSubsystem"})}),"\n",(0,i.jsxs)(n.p,{children:["The mod.io Unreal Engine Plugin consumes our ",(0,i.jsx)(n.a,{href:"/cppsdk/",children:"Native SDK"})," internally, and its public API is similar. The Native SDK exposes a number of free functions within the ",(0,i.jsx)(n.code,{children:"Modio"})," namespace, and this plugin wraps those functions in a ",(0,i.jsx)(n.a,{href:"https://dev.epicgames.com/documentation/en-us/unreal-engine/programming-subsystems-in-unreal-engine",children:"Subsystem"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The lifetime of the ",(0,i.jsx)(n.a,{href:"/unreal/refdocs/#modiosubsystem",children:(0,i.jsx)(n.code,{children:"ModioSubsystem"})})," is automatically managed by the engine and provides a convenient way to access the plugin's functionality.  This is broadly grouped into the following categories:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Plugin management (initialization, teardown, event loop)"}),"\n",(0,i.jsx)(n.li,{children:"User authentication"}),"\n",(0,i.jsx)(n.li,{children:"Mod browsing and querying"}),"\n",(0,i.jsx)(n.li,{children:"Mod management (subscription, unsubscription, and installation)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"value-objects",children:"Value objects"}),"\n",(0,i.jsxs)(n.p,{children:["All data returned by the plugin is presented using a small set of ",(0,i.jsx)(n.code,{children:"USTRUCTs"}),", containing information such as:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Details for mods that are available for installation"}),"\n",(0,i.jsx)(n.li,{children:"Progress information about mods being installed"}),"\n",(0,i.jsx)(n.li,{children:"Details and load paths for installed mods"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:['As structs, these are value types, so if you want to hold onto them once you\u2019ve shut down the plugin you can do so. They do not expose any methods that "talk back" to the ',(0,i.jsx)(n.code,{children:"ModioSubsystem"}),", so their methods are safe to call. This allows you, for instance, to initialize the plugin, query the installed mods, and retain that list even after shutting down the plugin and its event loop."]}),"\n",(0,i.jsx)(n.h2,{id:"utf-8-guarantees",children:"UTF-8 guarantees"}),"\n",(0,i.jsx)(n.p,{children:"The plugin uses UTF8 for all strings, as does the mod.io REST API."}),"\n",(0,i.jsx)(n.h2,{id:"thread-safety-guarantees",children:"Thread-safety guarantees"}),"\n",(0,i.jsxs)(n.p,{children:["The mod.io plugin is thread-safe with the exception of ",(0,i.jsx)(n.a,{href:"/unreal/refdocs/#run-pending-handlers",children:(0,i.jsx)(n.code,{children:"RunPendingHandlers"})}),". If you are calling ",(0,i.jsx)(n.code,{children:"RunPendingHandlers"})," manually, you must always call it on the same thread."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The plugin event loop, any internal event handlers, and all callbacks you provide to the mod.io plugin will be run on the thread invoking ",(0,i.jsx)(n.code,{children:"RunPendingHandlers"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"non-blocking-asynchronous-interface",children:"Non-blocking, asynchronous interface"}),"\n",(0,i.jsxs)(n.p,{children:["The plugin communicates with the mod.io servers, the filesystem on the device you\u2019re using, and platform-provided services for authentication. These may not return results immediately, so many functions provided by the ",(0,i.jsx)(n.code,{children:"ModioSubsystem"})," are non-blocking and asynchronous."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["All async methods in the public API end with the suffix ",(0,i.jsx)(n.code,{children:"Async"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"callback-conventions",children:"Callback conventions"}),"\n",(0,i.jsxs)(n.p,{children:["All of these asynchronous methods take a delegate as an argument, which will be invoked ",(0,i.jsx)(n.strong,{children:"exactly once"})," with the results of the requested operation. Every async callback takes a ",(0,i.jsx)(n.a,{href:"/unreal/refdocs/#modioerrorcode",children:(0,i.jsx)(n.code,{children:"ModioErrorCode"})})," as its first parameter, with any optional results wrapped in ",(0,i.jsx)(n.code,{children:"TOptional"})," so that you can easily check if a result is valid."]}),"\n",(0,i.jsxs)(n.p,{children:["Async functions should not be considered complete until their callback is invoked.  For example, although ",(0,i.jsx)(n.code,{children:"InitializeAsync"})," returns immediately, you must wait for its callback (with a successful ",(0,i.jsx)(n.code,{children:"ModioErrorCode"}),") before you are able to call any other functions from the ",(0,i.jsx)(n.code,{children:"ModioSubsystem"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Any return values provided to your callback are passed-by-value; the plugin doesn\u2019t expect you to have to call ",(0,i.jsx)(n.code,{children:"release"})," or otherwise free up resources given to you."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Even if the plugin is shut down while asynchronous operations are in-flight, your delegates will still be invoked ",(0,i.jsx)(n.strong,{children:"exactly once"}),". In this instance, the ",(0,i.jsx)(n.code,{children:"ModioErrorCode"})," the delegate receives will indicate a cancellation state, and you should check for this as part of your error handling in your delegates."]})}),"\n",(0,i.jsx)(n.h3,{id:"maintaining-the-plugin-event-loop",children:"Maintaining the plugin event loop"}),"\n",(0,i.jsxs)(n.p,{children:["In order to provide a non-blocking implementation, the plugin operates an internal event loop. This event loop will only ever run on the thread which calls ",(0,i.jsx)(n.a,{href:"/unreal/refdocs/#run-pending-handlers",children:(0,i.jsx)(n.code,{children:"RunPendingHandlers"})}),".  ",(0,i.jsx)(n.code,{children:"RunPendingHandlers"})," is the function we provide to tick the internal event loop and process any pending work the plugin needs to perform."]}),"\n",(0,i.jsxs)(n.p,{children:["You should either enable the ",(0,i.jsx)(n.a,{href:"/unreal/installation-and-setup/#plugin-configuration",children:"configuration setting"})," to allow the plugin to manage a background thread which automatically calls ",(0,i.jsx)(n.code,{children:"RunPendingHandlers"}),", or invoke it on tick in the game thread yourself."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This means that if you stop calling ",(0,i.jsx)(n.code,{children:"RunPendingHandlers"}),", any pending asynchronous API methods you have called will not complete and their associated callbacks will not be invoked, nor will the internal data allocated for those operations be freed."]})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error handling"}),"\n",(0,i.jsxs)(n.p,{children:["Many of the plugin's functions utilize the ",(0,i.jsx)(n.a,{href:"/unreal/refdocs/#modioerrorcode",children:(0,i.jsx)(n.code,{children:"ModioErrorCode"})})," type.  For example, all ",(0,i.jsx)(n.a,{href:"#non-blocking-asynchronous-interface",children:"async"})," functions take a ",(0,i.jsx)(n.code,{children:"ModioErrorCode"})," as the first parameter for the function's delegate. This is essentially an opaque wrapper around a numeric error code with a category and an associated string message."]}),"\n",(0,i.jsx)(n.p,{children:"The plugin doesn\u2019t attempt to predict what your error-handling logic or requirements are.  Instead, we return the error code to you so you can decide what to do. For instance, if you call a function and receive an error code matching a network error condition, do you want to close down the plugin? Retry again according to custom back-off logic? That decision is left to the consuming application."}),"\n",(0,i.jsxs)(n.p,{children:["For more details on the error codes and how to inspect their values, please see our ",(0,i.jsx)(n.a,{href:"/unreal/core-plugin/error-handling",children:"Error Handling quick-start guide"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"user-sessions",children:"User sessions"}),"\n",(0,i.jsxs)(n.p,{children:["The mod.io plugin runs on a per-platform-user basis. If you are using the plugin on a platform that requires user switching support, you must call ",(0,i.jsx)(n.a,{href:"/unreal/refdocs/#shutdownasync",children:(0,i.jsx)(n.code,{children:"ShutdownAsync"})})," and re-initialize the plugin by calling ",(0,i.jsx)(n.a,{href:"/unreal/refdocs/#initializeasync",children:(0,i.jsx)(n.code,{children:"InitializeAsync"})})," with a different ",(0,i.jsx)(n.a,{href:"#session-ids",children:"Session ID"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Generating a stable platform-specific Session ID for each user will ensure that an incoming user who has already authenticated with mod.io on the current device and game won\u2019t need to re-authenticate unless their authentication token has expired."}),"\n",(0,i.jsx)(n.h3,{id:"session-ids",children:"Session IDs"}),"\n",(0,i.jsx)(n.p,{children:"Session IDs are chosen by the developer.  They can be whatever you like as long as they are deterministic and stable. Session IDs create a scope or a local profile for the current user to live in so that a single system can support multiple authenticated users side-by-side without requiring de-authentication of the previous user. Internally, the Session ID is used to create a folder containing the authentication information and cached profile of the authenticated user."}),"\n",(0,i.jsx)(n.p,{children:"On console platforms, we suggest that the Session ID should be a string representation of the platform-provided user ID. This gives the best experience when it comes to things like user switching. For example, a game on Xbox using a sanitized string representation of the Xbox Live ID as the Session ID would have a folder structure in persistent storage like the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<persistent storage>/mod.io/<game ID>/<Xbox Live ID #1>/<cached profile data for Xbox Live User #1>\n<persistent storage>/mod.io/<game ID>/<Xbox Live ID #2>/<cached profile data for Xbox Live User #2>\n"})}),"\n",(0,i.jsx)(n.p,{children:"With this example, you can detect the user associated with the current controller on game start and initialize the mod.io plugin with the Session ID set to the stable string representation of that user's Xbox Live ID.  As a result, the user's authentication status will be maintained from the previous session on that device."}),"\n",(0,i.jsx)(n.p,{children:"In the case of a Windows title with user-provided profile names, the same folder structure would be more like the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"%USERDATA%/mod.io/<game ID>/ProfileName1/<cached profile data for mod.io account #1>\n%USERDATA%/mod.io/<game ID>/ProfileName2/<cached profile data for mod.io account #2>\n%USERDATA%/mod.io/<game ID>/ProfileName3/<cached profile data for mod.io account #3>\n"})}),"\n",(0,i.jsx)(n.p,{children:"This allows multiple players, for example siblings, to each have their own session living in the same Windows account."}),"\n",(0,i.jsx)(n.h2,{id:"mod-data-directory",children:"Mod data directory"}),"\n",(0,i.jsx)(n.p,{children:"The plugin stores mods in a game-specific directory in the following directory by default:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Windows"}),(0,i.jsx)(n.th,{children:"Linux"}),(0,i.jsx)(n.th,{children:"macOS"}),(0,i.jsx)(n.th,{children:"iOS"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"${FolderID_Public}/mod.io"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"${USER_HOME}/mod.io"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"${USER_HOME}/Library/Application Support/mod.io"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"${APP-DIRECTORY}/Documents/mod.io"})})]})})]}),"\n",(0,i.jsx)(n.p,{children:"However, this value can be overridden in one of two ways:"}),"\n",(0,i.jsx)(n.h3,{id:"globally-for-a-system-account",children:"Globally for a system account"}),"\n",(0,i.jsxs)(n.p,{children:["On first run of a game using the plugin, ",(0,i.jsx)(n.code,{children:"${FOLDERID_LocalAppData}/mod.io/globalsettings.json"})," will be created."]}),"\n",(0,i.jsxs)(n.p,{children:["This JSON object contains a ",(0,i.jsx)(n.code,{children:"RootLocalStoragePath"})," element - changing the string here to a valid path on disk will globally redirect the mod installation directory for ",(0,i.jsx)(n.strong,{children:"ALL"})," games using the mod.io Unreal Engine Plugin or Native SDK for the current system account."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"Changing this value while the SDK is initialized is not supported and behaviour is undefined."})}),"\n",(0,i.jsx)(n.h3,{id:"per-game-for-a-system-account",children:"Per-game for a system account"}),"\n",(0,i.jsxs)(n.p,{children:["Per-game settings are stored in ",(0,i.jsx)(n.code,{children:"${FOLDERID_LocalAppData}/mod.io/${GameId}/${mod.io user string}/user.json"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Adding a ",(0,i.jsx)(n.code,{children:"RootLocalStoragePath"})," element to this file will redirect the mod installation directory for this specific game only for the current system account. Removing this value will cause the game to revert back to the global value in ",(0,i.jsx)(n.code,{children:"globalsettings.json"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsx)(n.p,{children:"In Linux and macOS, mods and cached data binds to a single user. Other client have their own instance in their home directory."})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var i=t(18215);const o={tabItem:"tabItem_Ymn6"};var r=t(74848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(o.tabItem,s),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>w});var i=t(96540),o=t(18215),r=t(23104),s=t(56347),a=t(205),l=t(57485),d=t(31682),c=t(70679);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:o}}=e;return{value:n,label:t,attributes:i,default:o}}))}(t);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const o=(0,s.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})}),[r,o])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,r=h(e),[s,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r}))),[d,u]=m({queryString:t,groupId:o}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,r]=(0,c.Dv)(t);return[o,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:o}),x=(()=>{const e=d??g;return p({value:e,tabValues:r})?e:null})();(0,a.A)((()=>{x&&l(x)}),[x]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=t(92303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function y(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),o=a[t].value;o!==i&&(d(n),s(o))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>l.push(e),onKeyDown:u,onClick:c,...r,className:(0,o.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:o}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===o));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function j(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,o.A)("tabs-container",x.tabList),children:[(0,b.jsx)(y,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,b.jsx)(j,{...e,children:u(e.children)},String(n))}},89236:(e,n,t)=>{t.d(n,{A:()=>r});var i=t(19365),o=(t(96540),t(74848));function r(e){return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(i.A,{className:"tw-rounded-md",...e})})}},27064:(e,n,t)=>{t.d(n,{A:()=>r});var i=t(11470),o=(t(96540),t(74848));function r(e){return(0,o.jsx)("div",{className:"tw-border tw-border-solid tw-border-skyblue tw-rounded-md tw-bg-darkslategray tw-p-4 tw-mb-4",children:(0,o.jsx)(i.A,{...e})})}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);