"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[8156],{69285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=n(74848),a=n(28453),s=n(27064),r=n(89236);const o={id:"ue-user-authentication",title:"User Authentication",slug:"/unreal/getting-started/user-authentication",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/user-authentication.mdx"},l=void 0,c={id:"getting-started/ue-user-authentication",title:"User Authentication",description:"Best practices",source:"@site/public/en-us/getting-started/user-authentication.mdx",sourceDirName:"getting-started",slug:"/unreal/getting-started/user-authentication",permalink:"/unreal/getting-started/user-authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/user-authentication.mdx",tags:[],version:"current",frontMatter:{id:"ue-user-authentication",title:"User Authentication",slug:"/unreal/getting-started/user-authentication",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/user-authentication.mdx"},sidebar:"sidebar",previous:{title:"Initialization & Teardown",permalink:"/unreal/getting-started/initialization"},next:{title:"Browsing Mods",permalink:"/unreal/getting-started/browsing-mods"}},u={},d=[{value:"Best practices",id:"best-practices",level:2},{value:"Recommended flow",id:"recommended-flow",level:3},{value:"Terms &amp; user consent",id:"terms--user-consent",level:2},{value:"Authentication methods",id:"authentication-methods",level:2},{value:"Email authentication",id:"email-authentication",level:3},{value:"Requesting an authentication code",id:"requesting-an-authentication-code",level:4},{value:"Submitting an authentication code",id:"submitting-an-authentication-code",level:4},{value:"Single sign-on authentication",id:"single-sign-on-authentication",level:3},{value:"Using the Unreal Online Subsystem",id:"using-the-unreal-online-subsystem",level:2},{value:"Token Lifetime &amp; Re-Authentication",id:"token-lifetime--re-authentication",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,i.jsxs)(t.p,{children:["We recommend creating a new game-instance based subsystem (e.g. ",(0,i.jsx)(t.code,{children:"ModioManagerSubsystem"}),") that depends on ",(0,i.jsx)(t.code,{children:"ModioSubsystem"}),", and is responsible for managing the full initialization and authentication flow for your game."]}),"\n",(0,i.jsx)(t.h3,{id:"recommended-flow",children:"Recommended flow"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Create a subsystem to manage mod.io initialization and authentication."}),"\n",(0,i.jsxs)(t.li,{children:["Perform ",(0,i.jsx)(t.a,{href:"#using-the-unreal-online-subsystem",children:"Online Subsystem (OSS) login"})," in your subsystem's ",(0,i.jsx)(t.code,{children:"Initialize"})," function to ensure you have a valid platform auth token ready when its time to authenticate to mod.io using ",(0,i.jsx)(t.a,{href:"#single-sign-on-authentication",children:"single sign-on (SSO)"}),".","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Log in with the online identity provider."}),"\n",(0,i.jsx)(t.li,{children:"On success, get a linked account token for the current user."}),"\n",(0,i.jsx)(t.li,{children:"On success, get an authentication token from the linked account or from the online identity."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"initialization",children:"Initialize"})," the mod.io plugin with the required environment parameters for the current platform."]}),"\n",(0,i.jsxs)(t.li,{children:["Display the mod.io ",(0,i.jsx)(t.a,{href:"/terms/",children:"Terms of Service"}),".  Ensure they are accepted by the user."]}),"\n",(0,i.jsxs)(t.li,{children:["Authenticate the user using ",(0,i.jsx)(t.a,{href:"#single-sign-on-authentication",children:"SSO"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"If the Online Subsystem login fails at any point in the above process, fall back to simply initializing the plugin and offer email authentication as an alternative."})}),"\n",(0,i.jsx)(t.h2,{id:"terms--user-consent",children:"Terms & user consent"}),"\n",(0,i.jsxs)(t.p,{children:["Users must accept the mod.io Terms of Service before using any mod.io services.  The Terms of Service can be fetched from mod.io using ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#gettermsofuseasync",children:(0,i.jsx)(t.code,{children:"GetTermsOfUseAsync"})}),".  Before attempting authentication, ensure these terms are displayed to and accepted by the user."]}),"\n",(0,i.jsxs)(t.p,{children:["See our full ",(0,i.jsx)(t.a,{href:"/terms/",children:"Terms & User Consent"})," documentation for further details."]}),"\n",(0,i.jsxs)(t.p,{children:["When authenticating via SSO, the ",(0,i.jsx)(t.code,{children:"bUserHasAcceptedTerms"})," parameter should be set to ",(0,i.jsx)(t.strong,{children:"false"})," by default. If the user has already accepted the latest terms, they will be authenticated automatically. If they haven't accepted the latest terms, an error ",(0,i.jsx)(t.code,{children:"403 Forbidden (error_ref 11074)"})," will be returned. When you receive this error, you must display the terms dialog to the user, and if they accept, resubmit the authentication flow with ",(0,i.jsx)(t.code,{children:"bUserHasAcceptedTerms"})," set to ",(0,i.jsx)(t.strong,{children:"true"})," for that specific request only. All subsequent authentication attempts should revert to using ",(0,i.jsx)(t.strong,{children:"false"})," for this parameter."]}),"\n",(0,i.jsx)(t.h2,{id:"authentication-methods",children:"Authentication methods"}),"\n",(0,i.jsx)(t.p,{children:"The mod.io Unreal Engine plugin provides two ways for users to create an account to use the service: email authentication, and single sign-on (SSO) through an external authentication partner."}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"For the best user experience, we recommend using SSO wherever possible."})}),"\n",(0,i.jsx)(t.h3,{id:"email-authentication",children:"Email authentication"}),"\n",(0,i.jsx)(t.p,{children:"Users can authenticate to mod.io with just an email address.  This involves:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Requesting a one-time authentication code be sent from mod.io to an email address provided by the user."}),"\n",(0,i.jsx)(t.li,{children:"Submitting the received code to mod.io."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"requesting-an-authentication-code",children:"Requesting an authentication code"}),"\n",(0,i.jsxs)(t.p,{children:["Request a one-time authentication code by calling ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#requestemailauthcodeasync",children:(0,i.jsx)(t.code,{children:"RequestEmailAuthCodeAsync"})}),".  Pass in a user-provided email address as the first argument."]}),"\n",(0,i.jsxs)(s.A,{groupId:"languages",children:[(0,i.jsx)(r.A,{value:"blueprint",label:"Blueprint",children:(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"request_email_auth_code",src:n(46524).A+"",width:"925",height:"452"})})}),(0,i.jsx)(r.A,{value:"cpp",label:"C++",default:!0,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'void UModioManagerSubsystem::RequestEmailAuthCode(const FString &EmailAddress)\n{\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\n   {\n   \tSubsystem->RequestEmailAuthCodeAsync(FModioEmailAddress(*EmailAddress), FOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnRequestEmailAuthCodeComplete));\n   }\n}\n\nvoid UModioManagerSubsystem::OnRequestEmailAuthCodeComplete(FModioErrorCode ErrorCode)\n{\n   UE_LOG(LogModioGame, Log, TEXT("Email auth code request complete with result: %s"), *ErrorCode.GetErrorMessage());\n}\n'})})})]}),"\n",(0,i.jsxs)(t.p,{children:["When your callback is invoked, inspect the ",(0,i.jsx)(t.code,{children:"ModioErrorCode"})," for a successful result.  On success, prompt the user to check their emails and enter the authentication code they have received into your game."]}),"\n",(0,i.jsx)(t.h4,{id:"submitting-an-authentication-code",children:"Submitting an authentication code"}),"\n",(0,i.jsxs)(t.p,{children:["To finalize the user's authentication, submit the code they have entered to mod.io by calling ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#authenticateuseremailasync",children:(0,i.jsx)(t.code,{children:"AuthenticateUserEmailAsync"})}),".  Pass the user's code in as the first argument."]}),"\n",(0,i.jsxs)(s.A,{groupId:"languages",children:[(0,i.jsx)(r.A,{value:"blueprint",label:"Blueprint",children:(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"authenticate_user_email",src:n(73855).A+"",width:"829",height:"459"})})}),(0,i.jsx)(r.A,{value:"cpp",label:"C++",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'void UModioManagerSubsystem::AuthenticateUserEmail(const FString& AuthCode)\n{\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\n   {\n   \tSubsystem->AuthenticateUserEmailAsync(FModioEmailAuthCode(*AuthCode), FOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnAuthenticateUserEmailComplete));\n   }\n}\n\nvoid UModioManagerSubsystem::OnAuthenticateUserEmailComplete(FModioErrorCode ErrorCode)\n{\n   UE_LOG(LogModioGame, Log, TEXT("Email auth code submission complete with result: %s"), *ErrorCode.GetErrorMessage());\n}\n'})})})]}),"\n",(0,i.jsxs)(t.p,{children:["When your callback is invoked, inspect the ",(0,i.jsx)(t.code,{children:"ModioErrorCode"})," for a successful result.  On success, user authentication is complete."]}),"\n",(0,i.jsx)(t.h3,{id:"single-sign-on-authentication",children:"Single sign-on authentication"}),"\n",(0,i.jsxs)(t.p,{children:["The mod.io Unreal Engine plugin features single sign-on (SSO) authentication from a number of ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#EModioAuthenticationProvider",children:"external providers"}),". These include:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/platforms/gdk/#authentication",children:"Xbox Live"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/platforms/steam/authentication",children:"Steam"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/platforms/gog/authentication",children:"GOG Galaxy"})}),"\n",(0,i.jsx)(t.li,{children:"itch.io"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/platforms/switch/#authentication",children:"Nintendo Switch"})}),"\n",(0,i.jsx)(t.li,{children:"Discord"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/platforms/playstation/#authentication",children:"PlayStation\u2122Network"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/platforms/epic/authentication",children:"Epic Online Services"})}),"\n",(0,i.jsx)(t.li,{children:"Oculus"}),"\n",(0,i.jsx)(t.li,{children:"OpenID"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/platforms/google/authentication",children:"Google"})}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["OpenID is a premium feature. If you are interested in mod.io premium features, please contact ",(0,i.jsx)(t.a,{href:"mailto:developers@mod.io",children:"developers@mod.io"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["Each platform has their own requirements and prerequisites for performing SSO.  Platform-specific authentication can be found in the respective ",(0,i.jsx)(t.a,{href:"/platforms/",children:"platform documentation"}),".  SSO is performed by calling ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#authenticateuserexternalasync",children:(0,i.jsx)(t.code,{children:"AuthenticateUserExternalAsync"})}),".  This function takes a ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#modioauthenticationparams",children:(0,i.jsx)(t.code,{children:"ModioAuthenticationParams"})})," containing provider-specific parameters, and a ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#EModioAuthenticationProvider",children:(0,i.jsx)(t.code,{children:"ModioAuthenticationProvider"})})," indicating the provider you're using."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"#using-the-unreal-online-subsystem",children:"Unreal Engine's Online Subsystem"})," provides a convenient way to get a token for ",(0,i.jsx)(t.code,{children:"ModioAuthenticationParams.AuthToken"}),". ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#get-default-auth-provider-for-current-platform",children:(0,i.jsx)(t.code,{children:"GetDefaultAuthProviderForCurrentPlatform"})})," can be used to get the default provider for the current platform."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"The plugin will automatically URL encode parameters (such as the auth token) when making the request."})}),"\n",(0,i.jsxs)(s.A,{groupId:"languages",children:[(0,i.jsx)(r.A,{value:"blueprint",label:"Blueprint",children:(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"authenticate_user_email",src:n(47042).A+"",width:"1145",height:"732"})})}),(0,i.jsx)(r.A,{value:"cpp",label:"C++",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'void UModioManagerSubsystem::AuthenticateWithSSO(const FModioAuthenticationParams& AuthParams)\n{\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\n   {\n   \tSubsystem->AuthenticateUserExternalAsync(AuthParams, UModioPlatformHelpersLibrary::GetDefaultAuthProviderForCurrentPlatform(), FOnErrorOnlyDelegateFast::CreateUObject(this, &UModioManagerSubsystem::AuthenticateUserExternalComplete));\n   }\n}\n\nvoid UModioManagerSubsystem::AuthenticateUserExternalComplete(FModioErrorCode ErrorCode)\n{\n   UE_LOG(LogModioGame, Log, TEXT("SSO complete with result: %s"), *ErrorCode.GetErrorMessage());\n}\n'})})})]}),"\n",(0,i.jsx)(t.h2,{id:"using-the-unreal-online-subsystem",children:"Using the Unreal Online Subsystem"}),"\n",(0,i.jsxs)(t.p,{children:["Since Unreal Engine 5.2, most of the authentication methods supported by mod.io are abstracted by Unreal's ",(0,i.jsx)(t.a,{href:"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/OnlineSubsystem/IOnlineSubsystem",children:"Online Subsystem"}),". Below are some code snippets demonstrating the flow to get a linked account token from Unreal's Online Subsystem."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Create a subsystem to manage mod.io initialization and authentication that depends on the ",(0,i.jsx)(t.code,{children:"ModioSubsystem"}),".  During your subsystem's initialization, perform an Online Subsystem (OSS) login. This guarantees you will have a valid platform auth token ready when needed for mod.io SSO authentication."]}),"\n"]}),"\n",(0,i.jsx)(s.A,{"group-id":"languages",children:(0,i.jsx)(r.A,{value:"c++",label:"C++",default:!0,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"const IOnlineSubsystem* OnlineSubsystem = IOnlineSubsystem::GetByPlatform();\nif (OnlineSubsystem != nullptr && OnlineSubsystem->GetIdentityInterface() != nullptr)\n{\n   // Get the Identity interface from our OnlineSubsystem and perform login\n   const IOnlineIdentityPtr OnlineIdentity = OnlineSubsystem->GetIdentityInterface();\n   OnlineIdentity->AddOnLoginCompleteDelegate_Handle(\n   \t0, FOnLoginCompleteDelegate::CreateLambda(\n   \t\t   [this](int32 LocalUserNum, bool bWasSuccessful, const FUniqueNetId& UserId, const FString& Error) {\n   \t\t\t   this->OnSubsystemLoginComplete(LocalUserNum, bWasSuccessful, UserId, Error);\n   \t\t   }));\n   OnlineIdentity->Login(0, FOnlineAccountCredentials());\n}\nelse\n{\n   // If we don't have a valid OnlineSubsystem, just initialize the mod.io plugin\n   InitializeModio();\n}\n"})})})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"After a successful OSS login, request the linked account token."}),"\n"]}),"\n",(0,i.jsx)(s.A,{"group-id":"languages",children:(0,i.jsx)(r.A,{value:"c++",label:"C++",default:!0,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"void UModioManagerSubsystem::OnSubsystemLoginComplete(int32 LocalUserNum, bool bWasSuccessful, const FUniqueNetId& UserId, const FString& Error)\n{\n   if (bWasSuccessful)\n   {\n   \tauto OnlineIdentity = IOnlineSubsystem::GetByPlatform()->GetIdentityInterface();\n   \tOnlineIdentity->GetLinkedAccountAuthToken(0, FString(), IOnlineIdentity::FOnGetLinkedAccountAuthTokenCompleteDelegate::CreateUObject(this, &UModioManagerSubsystem::OnGetLinkedAccountTokenComplete)); \n   }\n}\n"})})})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["On success, the callback received from ",(0,i.jsx)(t.code,{children:"GetLinkedAccountAuthToken"})," will contain a token that you can use to perform SSO. This will contain either a byte array ",(0,i.jsx)(t.code,{children:"TokenData"})," (e.g. for Steam SSO) or ",(0,i.jsx)(t.code,{children:"TokenString"})," for a plaintext string.  These need to be handled appropriately."]}),"\n"]}),"\n",(0,i.jsx)(s.A,{"group-id":"languages",children:(0,i.jsx)(r.A,{value:"c++",label:"C++",default:!0,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"void UModioManagerSubsystem::OnGetLinkedAccountTokenComplete(int LocalUserNum, bool bWasSuccessful, const FExternalAuthToken& AuthToken)\n{\n   if (AuthToken.IsValid())\n   {\n   \tif (AuthToken.HasTokenData())\n   \t{\n   \t\tAuthTokenString = FBase64::Encode(AuthToken.TokenData);\t\t\n   \t} \n   \telse if (AuthToken.HasTokenString())\n   \t{\n   \t\tAuthTokenString = AuthToken.TokenString;\n   \t}\n   }\n}\n"})})})}),"\n",(0,i.jsx)(t.h2,{id:"token-lifetime--re-authentication",children:"Token Lifetime & Re-Authentication"}),"\n",(0,i.jsxs)(t.p,{children:["By default, tokens issued via email token exchange have a lifetime of 1 year. You can verify that a user has been successfully authenticated with ",(0,i.jsx)(t.a,{href:"/unreal/refdocs/#verifyuserauthenticationasync",children:(0,i.jsx)(t.code,{children:"VerifyUserAuthenticationAsync"})}),"."]}),"\n",(0,i.jsx)(t.p,{children:"If a user is not authenticated for any reason (e.g. their token has been invalidated by changing their password, or their profile data has been removed from their device) then you should prompt them to re-authenticate."})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},19365:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);var i=n(18215);const a={tabItem:"tabItem_Ymn6"};var s=n(74848);function r(e){let{children:t,hidden:n,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,r),hidden:n,children:t})}},11470:(e,t,n)=>{n.d(t,{A:()=>S});var i=n(96540),a=n(18215),s=n(23104),r=n(56347),o=n(205),l=n(57485),c=n(31682),u=n(70679);function d(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:i,default:a}}=e;return{value:t,label:n,attributes:i,default:a}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,r.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=h(e),[r,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=n.find((e=>e.default))??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:s}))),[c,d]=g({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,u.Dv)(n);return[a,(0,i.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),b=(()=>{const e=c??p;return m({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{b&&l(b)}),[b]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),f(e)}),[d,f,s]),tabValues:s}}var f=n(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function y(e){let{className:t,block:n,selectedValue:i,selectValue:r,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const t=e.currentTarget,n=l.indexOf(t),a=o[n].value;a!==i&&(c(t),r(a))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>l.push(e),onKeyDown:d,onClick:u,...s,className:(0,a.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":i===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function v(e){const t=p(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",b.tabList),children:[(0,x.jsx)(y,{...t,...e}),(0,x.jsx)(j,{...t,...e})]})}function S(e){const t=(0,f.A)();return(0,x.jsx)(v,{...e,children:d(e.children)},String(t))}},89236:(e,t,n)=>{n.d(t,{A:()=>s});var i=n(19365),a=(n(96540),n(74848));function s(e){return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(i.A,{className:"tw-rounded-md",...e})})}},27064:(e,t,n)=>{n.d(t,{A:()=>s});var i=n(11470),a=(n(96540),n(74848));function s(e){return(0,a.jsx)("div",{className:"tw-border tw-border-solid tw-border-skyblue tw-rounded-md tw-bg-darkslategray tw-p-4 tw-mb-4",children:(0,a.jsx)(i.A,{...e})})}},73855:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/authenticate_user_email-8a7dfc73b50ec6e1207617cc1281d927.png"},47042:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/authenticate_user_external-506f855cecdd50ea954c654cdf392301.png"},46524:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/request_email_auth_code-4d91d4625df810c57f097f6629bf0a80.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(96540);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);