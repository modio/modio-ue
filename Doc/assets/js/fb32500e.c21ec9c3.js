"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[8950],{44149:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=n(74848),r=n(28453),a=n(27064),i=n(89236);const s={id:"ue-edit-mods",title:"Edit an Existing Mod",slug:"/unreal/getting-started/edit-mods",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/edit-mods.mdx"},d=void 0,l={id:"getting-started/ue-edit-mods",title:"Edit an Existing Mod",description:"Mod details can be edited in-game using SubmitModChangesAsync.  This function allows you to edit multiple parameters with a single call.  It takes a ModioModID of the mod to edit, a ModioEditModParams containing one or more parameters to be altered, and a callback that will contain an optional updated ModioModInfo object on success.",source:"@site/public/en-us/getting-started/edit-mods.mdx",sourceDirName:"getting-started",slug:"/unreal/getting-started/edit-mods",permalink:"/unreal/getting-started/edit-mods",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/edit-mods.mdx",tags:[],version:"current",frontMatter:{id:"ue-edit-mods",title:"Edit an Existing Mod",slug:"/unreal/getting-started/edit-mods",custom_edit_url:"https://github.com/modio/modio-ue4-internal/blob/develop/Plugins/Modio/Doc/doc_root/en-us/getting-started/edit-mods.mdx"},sidebar:"sidebar",previous:{title:"In-Game Mod Submission",permalink:"/unreal/getting-started/submit-mods"},next:{title:"Error Handling",permalink:"/unreal/getting-started/error-handling"}},u={},c=[];function m(e){const t={a:"a",admonition:"admonition",code:"code",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Mod details can be edited in-game using ",(0,o.jsx)(t.a,{href:"/unreal/refdocs/#submitmodchangesasync-1",children:(0,o.jsx)(t.code,{children:"SubmitModChangesAsync"})}),".  This function allows you to edit multiple parameters with a single call.  It takes a ",(0,o.jsx)(t.a,{href:"/unreal/refdocs/#modiomodid",children:(0,o.jsx)(t.code,{children:"ModioModID"})})," of the mod to edit, a ",(0,o.jsx)(t.a,{href:"/unreal/refdocs/#modioeditmodparams",children:(0,o.jsx)(t.code,{children:"ModioEditModParams"})})," containing one or more parameters to be altered, and a callback that will contain an optional updated ",(0,o.jsx)(t.a,{href:"/unreal/refdocs/#modiomodinfo",children:(0,o.jsx)(t.code,{children:"ModioModInfo"})})," object on success."]}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["To update the mod file itself, use ",(0,o.jsx)(t.a,{href:"/unreal/refdocs/#submitnewmodfileformod",children:(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.code,{children:"SubmitNewModFileForMod"})})}),".  See ",(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.a,{href:"submit-mods#submitting-a-file-for-a-mod",children:"Submitting a file for a mod"})})," for more information."]})}),"\n",(0,o.jsxs)(a.A,{"group-id":"languages",children:[(0,o.jsx)(i.A,{value:"blueprint",label:"Blueprint",children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"edit_mod",src:n(33136).A+"",width:"1155",height:"480"})})}),(0,o.jsxs)(i.A,{value:"c++",label:"C++",default:!0,children:[(0,o.jsxs)(t.p,{children:["Note that it would be more appropriate to pass an ",(0,o.jsx)(t.a,{href:"/unreal/refdocs/#modioeditmodparams",children:(0,o.jsx)(t.code,{children:"FModioEditModParams"})})," with your desired parameters into ",(0,o.jsx)(t.code,{children:"UModioManagerSubsystem::EditMod()"}),". This example shows their creation within the function to illustrate their use."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:'void UModioManagerSubsystem::EditMod(FModioModID ModID)\n{\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\n   {\n   \tFModioEditModParams EditParams;\n\n   \t// Add one or more parameters to edit\n   \tEditParams.Name = TEXT("My Edited Mod Name");\n   \tEditParams.Summary = TEXT("My edited summary");\n   \t\n   \tSubsystem->SubmitModChangesAsync(ModID, EditParams, FOnGetModInfoDelegateFast::CreateUObject(this, &UModioManagerSubsystem::OnSubmitModChangesComplete));\n   }\n}\n\nvoid UModioManagerSubsystem::OnSubmitModChangesComplete(FModioErrorCode ErrorCode, FModioOptionalModInfo UpdatedInfo)\n{\n   if (!ErrorCode)\n   {\n   \t// Mod successfully updated. Can display new details from UpdatedInfo etc.\n   }\n}\n\n'})})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},19365:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var o=n(18215);const r={tabItem:"tabItem_Ymn6"};var a=n(74848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(r.tabItem,i),hidden:n,children:t})}},11470:(e,t,n)=>{n.d(t,{A:()=>j});var o=n(96540),r=n(18215),a=n(23104),i=n(56347),s=n(205),d=n(57485),l=n(31682),u=n(70679);function c(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??function(e){return c(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:r}}=e;return{value:t,label:n,attributes:o,default:r}}))}(n);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,d.aZ)(a),(0,o.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=m(e),[i,d]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:a}))),[l,c]=b({queryString:n,groupId:r}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,u.Dv)(n);return[r,(0,o.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),g=(()=>{const e=l??p;return h({value:e,tabValues:a})?e:null})();(0,s.A)((()=>{g&&d(g)}),[g]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);d(e),c(e),f(e)}),[c,f,a]),tabValues:a}}var f=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function M(e){let{className:t,block:n,selectedValue:o,selectValue:i,tabValues:s}=e;const d=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),u=e=>{const t=e.currentTarget,n=d.indexOf(t),r=s[n].value;r!==o&&(l(t),i(r))},c=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:s.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,ref:e=>d.push(e),onKeyDown:c,onClick:u,...a,className:(0,r.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":o===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function y(e){const t=p(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,x.jsx)(M,{...t,...e}),(0,x.jsx)(v,{...t,...e})]})}function j(e){const t=(0,f.A)();return(0,x.jsx)(y,{...e,children:c(e.children)},String(t))}},89236:(e,t,n)=>{n.d(t,{A:()=>a});var o=n(19365),r=(n(96540),n(74848));function a(e){return(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(o.A,{className:"tw-rounded-md",...e})})}},27064:(e,t,n)=>{n.d(t,{A:()=>a});var o=n(11470),r=(n(96540),n(74848));function a(e){return(0,r.jsx)("div",{className:"tw-border tw-border-solid tw-border-skyblue tw-rounded-md tw-bg-darkslategray tw-p-4 tw-mb-4",children:(0,r.jsx)(o.A,{...e})})}},33136:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/edit_mod-8edd0021fea77e67b69b6cb394fbe28b.png"},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var o=n(96540);const r={},a=o.createContext(r);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);